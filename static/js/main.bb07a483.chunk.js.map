{"version":3,"sources":["Spinner.js","index.js"],"names":["Spinner","_ref","duration","_useState","useState","_useState2","Object","slicedToArray","spinnerDuration","setSpinnerDuration","_useState3","_useState4","isVisible","setVisibility","visibility","useEffect","concat","toConsumableArray","timer","length","setInterval","newDurationArr","slice","clearInterval","react_default","a","createElement","className","style","rootElement","document","getElementById","ReactDOM","render","extendDuration","id","src_Spinner","type","onClick","newDuration","Math","random","roundTo100","ceil"],"mappings":"oOAgDeA,MA5Cf,SAAAC,GAA+B,IAAZC,EAAYD,EAAZC,SAAYC,EACiBC,mBAAS,IAD1BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACtBK,EADsBH,EAAA,GACLI,EADKJ,EAAA,GAAAK,EAEMN,oBAAS,GAFfO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEtBE,EAFsBD,EAAA,GAEXE,EAFWF,EAAA,GAGvBG,EAAaF,EAAY,UAAY,SAkC3C,OAhCAG,oBAAU,WACgB,kBAAbb,GACTO,EAAkB,GAAAO,OAAAV,OAAAW,EAAA,EAAAX,CAAKE,GAAL,CAAsBN,MAEzC,CAACA,IAEJa,oBAAU,WACR,IAAIG,EAoBJ,OAnBIV,EAAgBW,OAAS,IAC3BN,GAAc,GACdK,EAAQE,YAAY,WAClB,IAAMC,EAAiBb,EAAgBc,MAAM,GAC7Cb,EAAmBY,IAClBb,EAAgB,KAGU,IAA3BA,EAAgBW,SAClBN,GAAc,GACdK,EAAQE,YAAY,WAClBX,EAAmB,KAClBD,EAAgB,KAGU,IAA3BA,EAAgBW,QAClBN,GAAc,GAGT,WACLU,cAAcL,KAEf,CAACV,IAGFgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUC,MAAO,CAAEd,eAAlC,qBClBJ,IAAMe,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOT,EAAAC,EAAAC,cAnBhB,WAAe,IAAAvB,EACsBC,mBAAS,KAD/BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACND,EADMG,EAAA,GACI6B,EADJ7B,EAAA,GAQb,OACEmB,EAAAC,EAAAC,cAAA,OAAKS,GAAG,OACNX,EAAAC,EAAAC,cAACU,EAAD,CAASlC,SAAUA,IACnBsB,EAAAC,EAAAC,cAAA,UAAQW,KAAK,SAASF,GAAG,SAASG,QATtC,WACE,IAAMC,EAAc,IAAAC,KAAKC,SAA2B,IAC9CC,EAAkD,IAArCF,KAAKG,MAAMJ,EAAc,GAAK,KACjDL,EAAeQ,KAMb,qBAQU,MAASb","file":"static/js/main.bb07a483.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./Spinner.css\";\r\n\r\nfunction Spinner({ duration }) {\r\n  const [spinnerDuration, setSpinnerDuration] = useState([]);\r\n  const [isVisible, setVisibility] = useState(false);\r\n  const visibility = isVisible ? \"visible\" : \"hidden\";\r\n\r\n  useEffect(() => {\r\n    if (typeof duration === \"number\") {\r\n      setSpinnerDuration([...spinnerDuration, duration]);\r\n    }\r\n  }, [duration]);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (spinnerDuration.length > 1) {\r\n      setVisibility(true);\r\n      timer = setInterval(() => {\r\n        const newDurationArr = spinnerDuration.slice(1);\r\n        setSpinnerDuration(newDurationArr);\r\n      }, spinnerDuration[0]);\r\n    }\r\n\r\n    if (spinnerDuration.length === 1) {\r\n      setVisibility(true);\r\n      timer = setInterval(() => {\r\n        setSpinnerDuration([]);\r\n      }, spinnerDuration[0]);\r\n    }\r\n\r\n    if (spinnerDuration.length === 0) {\r\n      setVisibility(false);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [spinnerDuration]);\r\n\r\n  return (\r\n    <div className=\"spinner\" style={{ visibility }}>\r\n      Loading...\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Spinner from \"./Spinner\";\n\nimport \"./styles.css\";\n\nfunction App() {\n  const [duration, extendDuration] = useState(3000);\n  function handleClick() {\n    const newDuration = Math.random() * (3000 - 1000) + 1000;\n    const roundTo100 = Math.ceil((newDuration + 1) / 100) * 100;\n    extendDuration(roundTo100);\n  }\n\n  return (\n    <div id=\"App\">\n      <Spinner duration={duration} />\n      <button type=\"button\" id=\"extend\" onClick={handleClick}>\n        Extend duration\n      </button>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}